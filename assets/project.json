{"targets":[{"isStage":true,"name":"Stage","variables":{"Wm,D`|7/truBo=]:$6KI":["caller_id","33309990111"]},"lists":{},"broadcasts":{"?=,:V*2H2{Cr,$DAuR3M":"set_call","[1w%a5JP7@-8Ulx$]#hO":"set_answer","[k|.2`GK_+SouW5(ZiKu":"set_decline","Q*g3|H(l#q)b:A,CreMp":"set_forceterminate"},"blocks":{},"comments":{},"currentCostume":0,"costumes":[{"name":"backdrop1","dataFormat":"svg","assetId":"cd21514d0531fdffb22204e0ec5ed84a","md5ext":"cd21514d0531fdffb22204e0ec5ed84a.svg","rotationCenterX":240,"rotationCenterY":180}],"sounds":[],"volume":100,"layerOrder":0,"tempo":60,"videoTransparency":50,"videoState":"on","textToSpeechLanguage":null},{"isStage":false,"name":"Processer","variables":{},"lists":{},"broadcasts":{},"blocks":{"i":{"opcode":"event_whenflagclicked","next":"a","parent":null,"inputs":{},"fields":{},"topLevel":true},"a":{"opcode":"roturCall_enableAudio","next":null,"parent":"i","inputs":{"mic":[1,"j"]},"fields":{}},"j":{"opcode":"roturCall_menu_mic","next":null,"parent":"a","inputs":{},"fields":{"mic":["enable",null]},"shadow":true},"b":{"opcode":"roturCall_callPeer","next":null,"parent":"k","inputs":{"NAME":[3,[12,"caller_id","Wm,D`|7/truBo=]:$6KI"],[10,"friend"]],"WAIT":[1,"l"]},"fields":{}},"l":{"opcode":"roturCall_menu_wait","next":null,"parent":"b","inputs":{},"fields":{"wait":["wait",null]},"shadow":true},"k":{"opcode":"event_whenbroadcastreceived","next":"b","parent":null,"inputs":{},"fields":{"BROADCAST_OPTION":["set_call","?=,:V*2H2{Cr,$DAuR3M"]},"topLevel":true},"m":{"opcode":"event_whenbroadcastreceived","next":"n","parent":null,"inputs":{},"fields":{"BROADCAST_OPTION":["set_answer","[1w%a5JP7@-8Ulx$]#hO"]},"topLevel":true},"n":{"opcode":"roturCall_answerCall","next":null,"parent":"m","inputs":{},"fields":{}},"o":{"opcode":"event_whenbroadcastreceived","next":"p","parent":null,"inputs":{},"fields":{"BROADCAST_OPTION":["set_decline","[k|.2`GK_+SouW5(ZiKu"]},"topLevel":true},"q":{"opcode":"event_whenbroadcastreceived","next":"r","parent":null,"inputs":{},"fields":{"BROADCAST_OPTION":["set_forceterminate","Q*g3|H(l#q)b:A,CreMp"]},"topLevel":true},"p":{"opcode":"roturCall_hangup","next":null,"parent":"o","inputs":{},"fields":{}},"r":{"opcode":"roturCall_disconnectPeer","next":null,"parent":"q","inputs":{},"fields":{}}},"comments":{},"currentCostume":0,"costumes":[{"name":"costume1","bitmapResolution":1,"dataFormat":"svg","assetId":"927d672925e7b99f7813735c484c6922","md5ext":"927d672925e7b99f7813735c484c6922.svg","rotationCenterX":30.74937882782359,"rotationCenterY":58.864768144346826}],"sounds":[],"volume":100,"layerOrder":1,"visible":false,"x":0,"y":0,"size":100,"direction":90,"draggable":false,"rotationStyle":"all around"},{"isStage":false,"name":"Sprite1","variables":{},"lists":{},"broadcasts":{},"blocks":{"s":{"opcode":"event_whenthisspriteclicked","next":"t","parent":null,"inputs":{},"fields":{},"topLevel":true},"t":{"opcode":"event_broadcast","next":null,"parent":"s","inputs":{"BROADCAST_INPUT":[1,[11,"set_answer","[1w%a5JP7@-8Ulx$]#hO"]]},"fields":{}}},"comments":{},"currentCostume":0,"costumes":[{"name":"Ball-d","bitmapResolution":1,"dataFormat":"svg","assetId":"db144b2a19f4f1ab31e30d58f00447dc","md5ext":"db144b2a19f4f1ab31e30d58f00447dc.svg","rotationCenterX":22,"rotationCenterY":22}],"sounds":[],"volume":100,"layerOrder":2,"visible":true,"x":-100,"y":-90,"size":100,"direction":90,"draggable":false,"rotationStyle":"all around"},{"isStage":false,"name":"Sprite2","variables":{},"lists":{},"broadcasts":{},"blocks":{"u":{"opcode":"event_whenthisspriteclicked","next":"v","parent":null,"inputs":{},"fields":{},"topLevel":true},"v":{"opcode":"event_broadcast","next":null,"parent":"u","inputs":{"BROADCAST_INPUT":[1,[11,"set_decline","[k|.2`GK_+SouW5(ZiKu"]]},"fields":{}}},"comments":{},"currentCostume":0,"costumes":[{"name":"Ball-a","bitmapResolution":1,"dataFormat":"svg","assetId":"a6f27028938044be5c3d635355fed492","md5ext":"a6f27028938044be5c3d635355fed492.svg","rotationCenterX":22,"rotationCenterY":22}],"sounds":[],"volume":100,"layerOrder":3,"visible":true,"x":100,"y":-90,"size":100,"direction":90,"draggable":false,"rotationStyle":"all around"},{"isStage":false,"name":"Sprite3","variables":{},"lists":{},"broadcasts":{},"blocks":{"w":{"opcode":"event_whenflagclicked","next":"c","parent":null,"inputs":{},"fields":{},"topLevel":true},"c":{"opcode":"data_setvariableto","next":null,"parent":"w","inputs":{"VALUE":[3,"x",[10,"0"]]},"fields":{"VARIABLE":["caller_id","Wm,D`|7/truBo=]:$6KI"]}},"x":{"opcode":"looks_costumenumbername","next":null,"parent":"c","inputs":{},"fields":{"NUMBER_NAME":["name",null]}},"y":{"opcode":"event_whenthisspriteclicked","next":"d","parent":null,"inputs":{},"fields":{},"topLevel":true},"e":{"opcode":"data_setvariableto","next":null,"parent":"d","inputs":{"VALUE":[3,"z",[10,"0"]]},"fields":{"VARIABLE":["caller_id","Wm,D`|7/truBo=]:$6KI"]}},"z":{"opcode":"looks_costumenumbername","next":null,"parent":"e","inputs":{},"fields":{"NUMBER_NAME":["name",null]}},"d":{"opcode":"looks_nextcostume","next":"e","parent":"y","inputs":{},"fields":{}}},"comments":{},"currentCostume":0,"costumes":[{"name":"33309990111","bitmapResolution":1,"dataFormat":"svg","assetId":"3c721d248e705f79435bc54897fffe4c","md5ext":"3c721d248e705f79435bc54897fffe4c.svg","rotationCenterX":81.50000000000003,"rotationCenterY":81.49999999999991},{"name":"88807770777","bitmapResolution":1,"dataFormat":"svg","assetId":"afe04641c40419086d7e2359c4140bbc","md5ext":"afe04641c40419086d7e2359c4140bbc.svg","rotationCenterX":81.50000000000003,"rotationCenterY":81.49999999999991},{"name":"66604440555","bitmapResolution":1,"dataFormat":"svg","assetId":"75a73d3e9dfbff6c8b1a6d8314ec4049","md5ext":"75a73d3e9dfbff6c8b1a6d8314ec4049.svg","rotationCenterX":81.50000000000003,"rotationCenterY":81.49999999999991}],"sounds":[],"volume":100,"layerOrder":4,"visible":true,"x":0,"y":0,"size":100,"direction":90,"draggable":false,"rotationStyle":"all around"},{"isStage":false,"name":"Sprite4","variables":{},"lists":{},"broadcasts":{},"blocks":{"A":{"opcode":"event_whenflagclicked","next":"f","parent":null,"inputs":{},"fields":{},"topLevel":true},"B":{"opcode":"event_whenthisspriteclicked","next":"g","parent":null,"inputs":{},"fields":{},"topLevel":true},"f":{"opcode":"roturCall_connect","next":null,"parent":"A","inputs":{"NAME":[3,"C",[10,"user241"]]},"fields":{}},"C":{"opcode":"looks_costumenumbername","next":null,"parent":"f","inputs":{},"fields":{"NUMBER_NAME":["name",null]}},"h":{"opcode":"roturCall_connect","next":null,"parent":"g","inputs":{"NAME":[3,"D",[10,"user241"]]},"fields":{}},"D":{"opcode":"looks_costumenumbername","next":null,"parent":"h","inputs":{},"fields":{"NUMBER_NAME":["name",null]}},"g":{"opcode":"looks_nextcostume","next":"h","parent":"B","inputs":{},"fields":{}}},"comments":{},"currentCostume":2,"costumes":[{"name":"33309990111","bitmapResolution":1,"dataFormat":"svg","assetId":"b5b5ed1862f26bbeeb0a78c06a60f2a5","md5ext":"b5b5ed1862f26bbeeb0a78c06a60f2a5.svg","rotationCenterX":84,"rotationCenterY":84},{"name":"88807770777","bitmapResolution":1,"dataFormat":"svg","assetId":"e19d454edb5c8656083d6ac794fa38c1","md5ext":"e19d454edb5c8656083d6ac794fa38c1.svg","rotationCenterX":84.00000000000003,"rotationCenterY":83.99999999999991},{"name":"66604440555","bitmapResolution":1,"dataFormat":"svg","assetId":"5decd29774b2170721c39e3dfab678fc","md5ext":"5decd29774b2170721c39e3dfab678fc.svg","rotationCenterX":84.00000000000003,"rotationCenterY":83.99999999999991}],"sounds":[],"volume":100,"layerOrder":5,"visible":true,"x":205.9832421384691,"y":142.104552971934,"size":25,"direction":90,"draggable":false,"rotationStyle":"all around"},{"isStage":false,"name":"Sprite5","variables":{},"lists":{},"broadcasts":{},"blocks":{"E":{"opcode":"event_whenthisspriteclicked","next":"F","parent":null,"inputs":{},"fields":{},"topLevel":true},"F":{"opcode":"event_broadcast","next":null,"parent":"E","inputs":{"BROADCAST_INPUT":[1,[11,"set_call","?=,:V*2H2{Cr,$DAuR3M"]]},"fields":{}}},"comments":{},"currentCostume":1,"costumes":[{"name":"costume1","bitmapResolution":1,"dataFormat":"svg","assetId":"3339a2953a3bf62bb80e54ff575dbced","md5ext":"3339a2953a3bf62bb80e54ff575dbced.svg","rotationCenterX":0,"rotationCenterY":0},{"name":"Ball-b","bitmapResolution":1,"dataFormat":"svg","assetId":"ad7dc51cafd73e8279073e33b0eab335","md5ext":"ad7dc51cafd73e8279073e33b0eab335.svg","rotationCenterX":22,"rotationCenterY":22}],"sounds":[],"volume":100,"layerOrder":6,"visible":true,"x":0,"y":130,"size":100,"direction":90,"draggable":false,"rotationStyle":"all around"}],"monitors":[{"id":"Wm,D`|7/truBo=]:$6KI","mode":"default","opcode":"data_variable","params":{"VARIABLE":"caller_id"},"spriteName":null,"value":0,"width":0,"height":0,"x":5,"y":5,"visible":true,"sliderMin":0,"sliderMax":100,"isDiscrete":true},{"id":"roturCall_isConnected","mode":"default","opcode":"roturCall_isConnected","params":{},"spriteName":null,"value":0,"width":0,"height":0,"x":244,"y":316,"visible":true,"sliderMin":0,"sliderMax":100,"isDiscrete":true},{"id":"roturCall_onCall","mode":"default","opcode":"roturCall_onCall","params":{},"spriteName":null,"value":0,"width":0,"height":0,"x":258,"y":339,"visible":true,"sliderMin":0,"sliderMax":100,"isDiscrete":true},{"id":"roturCall_isCallIncoming","mode":"default","opcode":"roturCall_isCallIncoming","params":{},"spriteName":null,"value":0,"width":0,"height":0,"x":0,"y":315,"visible":true,"sliderMin":0,"sliderMax":100,"isDiscrete":true},{"id":"roturCall_hasAudio","mode":"default","opcode":"roturCall_hasAudio","params":{},"spriteName":null,"value":0,"width":0,"height":0,"x":0,"y":340,"visible":true,"sliderMin":0,"sliderMax":100,"isDiscrete":true},{"id":"roturCall_getStatus","mode":"large","opcode":"roturCall_getStatus","params":{},"spriteName":null,"value":0,"width":0,"height":0,"x":0,"y":30,"visible":true,"sliderMin":0,"sliderMax":100,"isDiscrete":true},{"id":"roturCall_getCallStatus","mode":"default","opcode":"roturCall_getCallStatus","params":{},"spriteName":null,"value":0,"width":0,"height":0,"x":0,"y":59,"visible":true,"sliderMin":0,"sliderMax":100,"isDiscrete":true},{"id":"roturCall_getName","mode":"large","opcode":"roturCall_getName","params":{},"spriteName":null,"value":0,"width":0,"height":0,"x":0,"y":86,"visible":true,"sliderMin":0,"sliderMax":100,"isDiscrete":true},{"id":"roturCall_getCallPartner","mode":"large","opcode":"roturCall_getCallPartner","params":{},"spriteName":null,"value":0,"width":0,"height":0,"x":0,"y":113,"visible":true,"sliderMin":0,"sliderMax":100,"isDiscrete":true}],"extensions":["roturCall"],"extensionURLs":{"roturCall":"data:text/javascript;base64,"},"meta":{"semver":"3.0.0","platform":{"name":"TurboWarp","url":"https://turbowarp.org/"}}}